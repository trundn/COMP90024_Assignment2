---
# Create an instance on NeCTAR
- name: Create an instance
  os_server:
    name: '{{ item.name }}'
    image: '{{ instance_image }}'
    key_name: '{{ instance_key_name }}'
    flavor: '{{ instance_flavor }}'
    availability_zone: '{{ availability_zone }}'
    network: '{{ network }}'
    security_groups: '{{ sg_names }}'
    volumes: '{{ item.volumes }}'
    auto_floating_ip: yes 
    wait: yes # Wait until instances are created otherwise it will fail the next module
    timeout: 600
    state: present # To create VM, to delete use absent
  loop: '{{ instances }}'
  register: os_instance

- debug:
    msg: "Instance {{ item.openstack.name }} has been created. IP address is {{ item.openstack.public_v4 }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined # item.openstack exists, we will printout otherwise no

# Opening SSH connection and connecting
- name: Wait for connection 
  wait_for:
    host: "{{ item.openstack.public_v4 }}"
    port: 22
    timeout: 120
    search_regex: OpenSSH
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

# Strong IP addresses that are dynamically created
- name: Get instances names and IPaddress
  set_fact:
    instance_facts: "{{ instance_facts|default([]) + [ {'name': item.item.name, 'address': item.openstack.public_v4} ] }}"
  loop: '{{ os_instance.results }}'
  when: item.openstack is defined

- name: Writing Inventory file
  copy:
    content: |
      [all:vars]
      ansible_python_interpreter=/usr/bin/python3
      ansible_user=ubuntu
      ansible_ssh_private_key_file=~/.ssh/mayank-sharma-key.pem
      #ansible_ssh_common_args='-o StrictHostKeyChecking=no'

      [allInstances:children]
      appInstance
      dbInstances

      [dbInstances:children]
      masterInstance
      slaveInstances

      [masterInstance:children]
      db-instance-1

      [slaveInstances:children]
      db-instance-2
      db-instance-3

      [appInstance:children]
      app-instance
      
      
    dest: "/media/mayankshar21/New Volume/university/COMP90024/Project/COMP90024_Assignment2/deployment/hosts.ini"

- name: Add dynamically created IP addresses to inventory
  lineinfile:
    line: |
      [{{ item.name }}]
      {{ item.address }}
    dest: "/media/mayankshar21/New Volume/university/COMP90024/Project/COMP90024_Assignment2/deployment/hosts.ini"
  loop: '{{ instance_facts }}' 




