---
# Delete application folders to allow application update
- name: Delete folders
  become: yes
  file:
    path: "{{ app_destination_directory }}/{{ item }}"
    state: absent
  with_items:
    - backend
    - data
    - gui
    - views

# Copy application folders to VM for setup
- name: Copy folders to VMs
  become: yes
  synchronize:
    src: "{{ app_source_directory }}{{ item }}"
    dest: "{{ app_destination_directory }}"
    mode: push
  with_items:
    - backend
    - data
    - gui
    - views

# Copy dockerfiles to deploy the application
- name: Copy docker and docker compose files
  become: yes
  copy:
    src: "{{ docker_files_src }}{{ item }}"
    dest: "{{ docker_files_dest }}"
  with_items:
    - docker-compose.yaml
    - Dockerfile.backend
    - Dockerfile.frontend

# Filter the masterInstance IP address to allow collection with application
- name: Filtering address
  set_fact:
    remote_address: "{{ item }}"
  with_items:
    - "{{ couchdb_master_node }}"

# Render settings.py template to update IP address of allowed hosts and masterdb node
- name: Copy settings file to backend
  become: yes
  template:
    src: ./roles/templates/settings.py.j2
    dest: "{{ docker_files_dest }}{{ settings_file_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"

# Render backendUrl template to update IP address of backend url
- name: Copy backendUrl file to gui
  become: yes
  template:
    src: ./roles/templates/backendUrl.js.j2
    dest: "{{ docker_files_dest }}{{ backendUrl_file_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
